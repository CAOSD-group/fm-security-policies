Modelado de los CRDs de kyverno definidos en:
https://github.com/kyverno/kyverno/tree/main/config/crds

schema:
  openAPIV3Schema:
define el inicio de la definicion de las propiedades del esquema. Se acompaÃ±a de la version a definir

description y properties para cada definicion de una propiedad. La descripcion como se realizo en el de k8s
se podria agregar como un atributo 'doc', properties sirve para saber que elemento tiene mas propiedades anidadas
para reflejarlas. En lo que he visto se puede usar para definir profundidad en features.
type, define el tipo de dato que se declara, util para definir el tipo de dato del feature
enum, se puede definir como el oneOf, es decir un altenative con la seleccion de los 2 posibles valores ya que
son valores predefinidos para utilizar/seleccionar.


V1.
generate_uvl_from_crd_yaml.py
First version to convert CRDs definitions of kyverno to a valid fm

-- Hecho
Se define al final del todo del Objeto del schema, se necesita agregar el required del spec. 
                required:
                - generated
                - message
                type: object
            type: object
        required:
        - spec
        type: object
-- Hecho

-- Hecho
Al tener enum y el tipo de la propiedad String hay que modificar manualmente el tipo de dato del feature para que sea Bool
y permitir la seleccion entre estos 2 valores predefinidos que tambien son Bool.

                enum:
                - All
                - One
                type: string
-- Hecho
-- Hecho
Eliminar los Boolean, en uvl no hace falta mostra el tipeo. Si se aÃ±ade sin tipo ya se toma por defecto como bool
-- Hecho
Revisar como se usa y define el "items:". No es una propiedad, parece mas bien algo similar a que se define un comportamiento
secundario de la propiedad principal. Podria ser facilmente para definir una prop como Array, se parece al items de k8s, omitir
su representacion y usarlo como marca de Array--cardinality
              rules:
                description: |-
                  Rules is a list of Rule instances. A Policy contains multiple rules and
                  each rule can validate, mutate, or generate resources.
                items:

-- Hecho

Expresion para buscar los arrays de strings; items:\s*\n\s*type:\s*string

items:  
  type: string
--

Definir el not... como una constraint de exclusion mutua, donde se podria traducir a:
!(name & names)
name => !names | names => !name
not:
  required:
  - name
  - names



                    context:
                      description: Context defines variables and data sources that
                        can be used during rule execution.
                      items:
                        description: |-
                          ContextEntry adds variables and data sources to a rule Context. Either a
                          ConfigMap reference or a APILookup must be provided.
                        oneOf:
                        - required:
                          - configMap
                        - required:
                          - apiCall
                        - required:
                          - imageRegistry
                        - required:
                          - variable
                        - required:
                          - globalReference
                        properties:
                          apiCall:
                            description: |-

oneOf se traduce a alterenative tambien, al solo declarar una de las propiedades en cada required se da por hecho que solo se seleccionaria una
: similar a modelar alternativas excluyentes. Cambiaria si en el required se definieran mas propiedades. Ex required: [configMap, apiCall]

**Dude: Se puede definir un alternative + mandatory?
alternative puede tener sub-features?

-- Hecho
Hay 2 tipos de additionalProperties, falta definir que tambien sirve para representar mas props bajo el additional...

...validatingpolicies.yaml:
          status:
            description: Status contains policy runtime data.
            properties:
              autogen:
                properties:
                  configs:
                    additionalProperties:
                      properties:
                        spec:
                          description: ValidatingPolicySpec is the specification of
                            the desired behavior of the ValidatingPolicy.
                          properties:

Caso del ClusterPolicy:
                        imageExtractors:
                          additionalProperties:
                            items:
                              properties:
                                jmesPath:
                                  description: |-

metadata se usa en la definicion de las politicas de kyverno, segun pone en la doc es una referencia de metadata de k8s.
Hacer import del objeto de k8s? 
metadata:
  name: disallow-host-namespaces
  annotations:                

En los CRD: 
          metadata:
            type: object

Pero en la documentacion de la web se especifica, aunque la ref esta rota
metadata
Kubernetes meta/v1.ObjectMeta	Refer to the Kubernetes API documentation for the fields of the metadata field.

Propiedades clave para las restricciones de las politicas.

validate: ## Define casos de validacion, suelen ser comprobaciones de valores = o ==, faciles de traducir siguiendo
el spec... se traduce encadenando props e igualando al valor...

deny: ## Parece que define condiciones mas "complejas" que requieren de un mayor analisis
Restricciones de rangos, lista de valores no permitidos...



Integer Pod_spec_containers_ports_hostPort
Integer io_k8s_api_core_v1_Pod_spec_ephemeralContainers_ports_hostPort {doc 'Number of port to expose on the host If specified, this must be a valid port number, 0 < x < 65536 If HostNetwork is specified, this must match ContainerPort Most containers do not need this'}
Integer io_k8s_api_core_v1_Pod_spec_initContainers_ports_hostPort {doc 'Number of port to expose on the host If specified, this must be a valid port number, 0 < x < 65536 If HostNetwork is specified, this must match ContainerPort Most containers do not need this'}


io_k8s_api_core_v1_Pod_spec_securityContext_windowsOptions_hostProcess {doc 'HostProcess determines if a container should be run as a _Host Process_ container All of a Pod_s containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers) In addition, if HostProcess is true then HostNetwork must also be set to true'}

En disallow-proc-mount se referencia a procMount, yo lo defini como un Bool para agregar una restriccion entre reglas del SO. Se personalizo y agrego nameStr para no perder el String de definicion...
.securityContext.procMount must be unset or
          set to `Default`.
											io_k8s_api_core_v1_Pod_spec_ephemeralContainers_securityContext_procMount {abstract, doc 'procMount denotes the type of proc mount to use for the containers The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths This requires the ProcMountType feature flag to be enabled Note that this field cannot be set when specosname is windows'}
												mandatory
													String io_k8s_api_core_v1_Pod_spec_ephemeralContainers_securityContext_procMount_nameStr {doc 'Added String mandatory for changing booleans of boolean_keywords: string *_name'}

restrict-sysctls
									io_k8s_api_core_v1_Pod_spec_securityContext_sysctls cardinality [1..*] {doc 'Sysctls hold a list of namespaced sysctls used for the pod Pods with unsupported sysctls (by the container runtime) might fail to launch Note that this field cannot be set when specosname is windows'}
										mandatory
											String io_k8s_api_core_v1_Pod_spec_securityContext_sysctls_name {doc 'Name of a property to set'}
											String io_k8s_api_core_v1_Pod_spec_securityContext_sysctls_value {doc 'Value of a property to set'}
-- Hecho
Por el momento la 1ÂºV parece que es vÃ¡lida
(flamapyenv02) PS C:\Users\CAOSD\projects\fm-json-kubernetes\scripts\ci> py .\valid_model.py v1.30.2.kyverno
ðŸ§ª Validating model for v1.30.2.kyverno...
âœ… Model is valid.
(flamapyenv02) PS C:\Users\CAOSD\projects\fm-json-kubernetes\scripts\ci> 